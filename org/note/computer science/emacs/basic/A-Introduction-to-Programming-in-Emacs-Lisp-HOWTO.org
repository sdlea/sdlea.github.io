#+TITLE: Learning Emacs Lisp
* A Introduction to Programming in Emacs Lisp - eintr
** 序言
   1. <<相關閱讀>> /The GNU Emacs Lisp Reference Manual/
*** History of Lisp
    - Lisp MIT late 1950s 为研究AI开发
    - Maclisp MIT 1960s
    - GNU Emacs Lisp 受 Maclisp 启发
    - Common Lisp 1980s 成为标准
    - GNU Emacs Lisp 比 Common Lisp更简单
    - Emacs发行版中有可选扩展 *cl.el* 以支持Common Lisp特性
    - [[https://en.wikipedia.org/wiki/Lisp_(programming_language)][More at Wikipedia]]
*** 使用Emacs
    - 新手建议 读内置教程
    - *C-u* /universal argument/ 不设置数字默认为4
      - 更多参考 /Numric Arguments/ 章节 [[相關閱讀]]
** List Processing
   - Lisp Stands for LISt Processing
   - 操作 /列表/ 的编程语言
   - 小括号 标记 列表的边界
   - 单引号 有事可以产生一个列表 apostrophe /single-quote/
   - list 是 Lisp 的基础
*** Lisp Lists
    - 空格 换行等 不影响列表内容
    - 数据和程序都以同样的方式呈现
      - 即单词(字符)、数字或其他列表组成的列表
      - 以空格分割 被括号包围
      - 由于程序跟数据以同样的方式呈现 所以程序可以简单的作为数据提供给另外一个程序
      - 括号内包含其他标点符号的语句 不能算做列表
        - 除非用引号包括
**** Lisp Atoms
     - 原子 取不可分割/切割的意思
     - 列表中使用的单词(Words)被分割后就与原来的意义不同
     - 列表可以被分割
     - 原子 以空格分离 可以紧邻括号
     - 定义上
       - 列表由
         - 括号
           - 包括住的 *以空格分离* 的原子
           - 或 包括的其他列表
           - 或 包括的原子和列表的
     - 列表可以只包含一个原子或不含任何东西
       - () 不包含任何东西的列表
       - 成为 空列表(/empty list/)
       - 一个空列表被认为即是一个原子也是一个列表
     - S-表达式(/symbolic expressions s-expressions/)
       - 被 /打印/ 出来的 原子和列表(/the printed representation/) 被称为 S表达式
       - 表达式(expression) 本身可以指代
         - 被打印出来的内容的本身
         - 或者 原子和列表
           - 电脑内部保存的原子和列表
           - /The word expression by itself can refer to either the printed representation, or to the atom or list as it is held internally in the computer./
           - 通常 表达式这个定义 使用上很模糊
           - 在许多文本中 form 这个词被用作表达式的近义词
     - 考虑到对列表进行操作 列表中的原子是不可分割的(*unsplittable*)
     - 组成Lisp 原子的的字母的意义与英语中的字符意义是不同的
     - Lisp 中原子的种类
       - 数字
       - 符号(/symbols/)
     - 原子这个词不经常使用
       - 因为会指定特定种类的原子进行操作
     - Lisp编程大多与列表中的 符号(symbols) 相关 有时是处理数字
     - 双引号(doble quotation marks) 包括的文本 被认为是一个原子
       - 标点符号和空格等一起作为一个原子
       - 这种类型的原子成为 字符串(/string/)
       - 由电脑打印出来的人类可读的内容
       - 字符串作为与数字或符号不同的原子类型 使用方法也不同
**** 列表中的空格
     - 列表中空格的数量无关紧要
     - 多余的空格和断行 可以使阅读代码更加易读
**** GNU Emacs 帮助你输入列表
     - <TAB> 按键 自动缩进
     - <M-C-\> 空白符号
     - 括号匹配
*** 运行一个程序
    - 任何 列表 在Lisp中都是可运行的程序
    - 运行(/evaluate/) 程序 电脑会做
      1. 除了返回列表本身之外不做任何事情
      2. 将列表的第一个 符号 当作命令来做对应的事情
      3. 发送错误信息
    - 放在列表前面的 单引号 被称作 引用(/quote/)
      - 当产生一个列表时 它告诉Lisp只产生一个列表 而不做其他事情
      - 如果没有单引号 第一个 符号 会被当作命令来执行
        - 这些命令在Lisp中被称作 函数(/functions/)
    - 将光标置于右手边的括号后面 然后输入 <C-x C-e> 结果将会呈现在 回应区(/echo area/)
    - Lisp /interpreter/ Lisp编译器
      - 词来自于 想出表达式需要做的工作的的人 ???
      - The name of the Lisp interpreter comes from the word for the task done by a human who comes up with the meaning of an expression—who interprets it.
    - 也可以运行 不是 作为列表一部分的原子
      - 没有被包围在括号里的原子
    - Lisp编译器将人类可读的表达式转换成计算机语言
*** 产生错误信息
